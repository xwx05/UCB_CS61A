;Q1: Perfect Fit
; Return whether there are n perfect squares with no repeats that sum to total

    (define (fit total n)
        (define (f total n k)
            (if (and (= n 0) (= total 0))
                #t
            (if (< total (* k k))
                #f
            ;选择当前的 k 的平方加入到和中，递归调用 f，将 total 减去 k 的平方，n 减 1，k 加 1。
            ;不选择当前的 k 的平方，递归调用 f，total 和 n 不变，k 加 1。
            (or (f total n (+ k 1)) (f (- total (* k k)) (- n 1) (+ k 1)))
            )))
        (f total n 1))

    (expect (fit 10 2) #t)  ; 1*1 + 3*3
    (expect (fit 9 1)  #t)  ; 3*3
    (expect (fit 9 2)  #f)  ;
    (expect (fit 9 3)  #f)  ; 1*1 + 2*2 + 2*2 doesn't count because of repeated 2*2
    (expect (fit 25 1)  #t) ; 5*5
;    (expect (fit 25 2)  #t) ; 3*3 + 4*4

;Q2: Nested Lists
(define with-list
        (list
            'YOUR-CODE-HERE
        )
    )
    ; (draw with-list)  ; Uncomment this line to draw with-list